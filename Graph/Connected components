class Solution {
  public:
  
  void dfs(int vertex, vector<vector<int>> &g, vector<int> &vis){
      vis[vertex]=1;
      for(auto child :g[vertex]){
          if(vis[child]) continue;
          dfs(child, g, vis);
      }
  }
  
    int numProvinces(vector<vector<int>> adj, int V) {
        int ans=0;
        vector<int>vis(V, 0);
        
        vector<vector<int>>g(V);
        for(int i=0;i<adj.size();i++){
            for(int j=0;j<adj[0].size();j++){
                if(adj[i][j]==1 && i!=j){
                    g[i].push_back(j);
                }
            }
        }
        for(int i=0;i<adj.size();i++){
            if(vis[i]==1) continue;
            dfs(i, g, vis);
            ans++;
        }
        return ans;
    }
